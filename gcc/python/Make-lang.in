# Make-lang.in -- Top level -*- makefile -*- fragment for GCC Python frontend.

# Copyright (C) 2009, 2010, 2011 2012 Free Software Foundation, Inc.

# This file is part of GCC.

# GCC is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.

# GCC is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with GCC; see the file COPYING3.  If not see
# <http://www.gnu.org/licenses/>.

# This file provides the language dependent support in the main Makefile.

# Installation name.

PYTHON_EXES = python

.phony: python

# Use strict warnings for this front end.
python-warn = $(STRICT_WARN)

GCCPY_INSTALL_NAME := $(shell echo gccpy|sed '$(program_transform_name)')
GCCPY_TARGET_INSTALL_NAME := $(target_noncanonical)-$(shell echo gccpy|sed '$(program_transform_name)')

python: gccpy$(exeext) gpy1$(exeext)

GPY_CFLAGS := -g -O2 -I${srcdir}/python -fomit-frame-pointer -W -Wall -pedantic -DHAVE_CONFIG_H

py-lexer.o: $(srcdir)/python/py-lexer.l py-parser.o
	$(FLEX) --outfile=lex.py.c $(srcdir)/python/py-lexer.l
	$(COMPILER) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(GPY_CFLAGS) $(INCLUDES) \
	$(LDFLAGS) -c -o $@ lex.py.c

py-parser.o: $(srcdir)/python/py-parser.y
	$(BISON) -v --debug --verbose --defines=y.py.h --output=y.py.c \
	$(srcdir)/python/py-parser.y
	$(COMPILER) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(GPY_CFLAGS) $(INCLUDES) \
	$(LDFLAGS) -c -o $@ y.py.c

gpy-import-lexer.o: $(srcdir)/python/gpy-import-lexer.l gpy-import-parser.o
	$(FLEX) --outfile=lex.gpy.c --prefix=IMP $(srcdir)/python/gpy-import-lexer.l
	$(COMPILER) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(GPY_CFLAGS) $(INCLUDES) \
	$(LDFLAGS) -c -o $@ lex.gpy.c

gpy-import-parser.o: $(srcdir)/python/gpy-import-parser.y
	$(BISON) -v --debug --verbose --defines=y.gpy.h --name-prefix=IMP --output=y.gpy.c \
	$(srcdir)/python/gpy-import-parser.y
	$(COMPILER) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(GPY_CFLAGS) $(INCLUDES) \
	$(LDFLAGS) -c -o $@ y.gpy.c

py-lang.o: $(srcdir)/python/py-lang.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \
  $(FLAGS_H) toplev.h $(GGC_H) $(TREE_H) $(DIAGNOSTIC_H) input.h options.h opts.h \
  gt-python-py-lang.h gtype-python.h
	$(COMPILER) $(GPY_CFLAGS) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \
	$(LDFLAGS) -c -o $@ $(srcdir)/python/py-lang.c

dot-hashtab.o: $(srcdir)/python/dot-hashtab.cc $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \
  $(FLAGS_H) toplev.h $(GGC_H) $(TREE_H) $(DIAGNOSTIC_H) input.h options.h opts.h \
  gt-python-py-lang.h gtype-python.h
	$(COMPILER) $(GPY_CFLAGS) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \
	$(LDFLAGS) -c -o $@ $(srcdir)/python/dot-hashtab.cc

gpy-runtime.o: $(srcdir)/python/gpy-runtime.cc $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \
  $(FLAGS_H) toplev.h $(GGC_H) $(TREE_H) $(DIAGNOSTIC_H) input.h options.h opts.h \
  gt-python-py-lang.h gtype-python.h
	$(COMPILER) $(GPY_CFLAGS) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \
	$(LDFLAGS) -c -o $@ $(srcdir)/python/gpy-runtime.cc

dot.o: $(srcdir)/python/dot.cc $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \
  $(FLAGS_H) toplev.h $(GGC_H) $(TREE_H) $(DIAGNOSTIC_H) input.h options.h opts.h \
  gt-python-py-lang.h gtype-python.h
	$(COMPILER) $(GPY_CFLAGS) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \
	$(LDFLAGS) -c -o $@ $(srcdir)/python/dot.cc

dot-pass-manager.o: $(srcdir)/python/dot-pass-manager.cc $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \
  $(FLAGS_H) toplev.h $(GGC_H) $(TREE_H) $(DIAGNOSTIC_H) input.h options.h opts.h \
  gt-python-py-lang.h gtype-python.h
	$(COMPILER) $(GPY_CFLAGS) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \
	$(LDFLAGS) -c -o $@ $(srcdir)/python/dot-pass-manager.cc

dot-pass-gen-types.o: $(srcdir)/python/dot-pass-gen-types.cc $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \
  $(FLAGS_H) toplev.h $(GGC_H) $(TREE_H) $(DIAGNOSTIC_H) input.h options.h opts.h \
  gt-python-py-lang.h gtype-python.h
	$(COMPILER) $(GPY_CFLAGS) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \
	$(LDFLAGS) -c -o $@ $(srcdir)/python/dot-pass-gen-types.cc

dot-pass-generic.o: $(srcdir)/python/dot-pass-generic.cc $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \
  $(FLAGS_H) toplev.h $(GGC_H) $(TREE_H) $(DIAGNOSTIC_H) input.h options.h opts.h \
  gt-python-py-lang.h gtype-python.h
	$(COMPILER) $(GPY_CFLAGS) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \
	$(LDFLAGS) -c -o $@ $(srcdir)/python/dot-pass-generic.cc

dot-pass-translate.o: $(srcdir)/python/dot-pass-translate.cc $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \
  $(FLAGS_H) toplev.h $(GGC_H) $(TREE_H) $(DIAGNOSTIC_H) input.h options.h opts.h \
  gt-python-py-lang.h gtype-python.h
	$(COMPILER) $(GPY_CFLAGS) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \
	$(LDFLAGS) -c -o $@ $(srcdir)/python/dot-pass-translate.cc

dot-pass-check1.o: $(srcdir)/python/dot-pass-check1.cc $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \
  $(FLAGS_H) toplev.h $(GGC_H) $(TREE_H) $(DIAGNOSTIC_H) input.h options.h opts.h \
  gt-python-py-lang.h gtype-python.h
	$(COMPILER) $(GPY_CFLAGS) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \
	$(LDFLAGS) -c -o $@ $(srcdir)/python/dot-pass-check1.cc

dot-pass-const_fold.o: $(srcdir)/python/dot-pass-const_fold.cc $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \
  $(FLAGS_H) toplev.h $(GGC_H) $(TREE_H) $(DIAGNOSTIC_H) input.h options.h opts.h \
  gt-python-py-lang.h gtype-python.h
	$(COMPILER) $(GPY_CFLAGS) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \
	$(LDFLAGS) -c -o $@ $(srcdir)/python/dot-pass-const_fold.cc

dot-pass-dot-PrettyPrint.o: $(srcdir)/python/dot-pass-dot-PrettyPrint.cc $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \
  $(FLAGS_H) toplev.h $(GGC_H) $(TREE_H) $(DIAGNOSTIC_H) input.h options.h opts.h \
  gt-python-py-lang.h gtype-python.h
	$(COMPILER) $(GPY_CFLAGS) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \
	$(LDFLAGS) -c -o $@ $(srcdir)/python/dot-pass-dot-PrettyPrint.cc

dot-pass-types-PrettyPrint.o: $(srcdir)/python/dot-pass-types-PrettyPrint.cc $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \
  $(FLAGS_H) toplev.h $(GGC_H) $(TREE_H) $(DIAGNOSTIC_H) input.h options.h opts.h \
  gt-python-py-lang.h gtype-python.h
	$(COMPILER) $(GPY_CFLAGS) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \
	$(LDFLAGS) -c -o $@ $(srcdir)/python/dot-pass-types-PrettyPrint.cc

gpy-data-export.o: $(srcdir)/python/gpy-data-export.cc $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \
  $(FLAGS_H) toplev.h $(GGC_H) $(TREE_H) $(DIAGNOSTIC_H) input.h options.h opts.h \
  gt-python-py-lang.h gtype-python.h
	$(COMPILER) $(GPY_CFLAGS) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \
	$(LDFLAGS) -c -o $@ $(srcdir)/python/gpy-data-export.cc

gpy-builtins.o: $(srcdir)/python/gpy-builtins.cc $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \
  $(FLAGS_H) toplev.h $(GGC_H) $(TREE_H) $(DIAGNOSTIC_H) input.h options.h opts.h \
  gt-python-py-lang.h gtype-python.h
	$(COMPILER) $(GPY_CFLAGS) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \
	$(LDFLAGS) -c -o $@ $(srcdir)/python/gpy-builtins.cc

GPY_OBJS = \
	py-parser.o \
	py-lexer.o \
	gpy-import-parser.o \
	gpy-import-lexer.o \
	py-lang.o \
	dot-hashtab.o \
	gpy-runtime.o \
	dot.o \
	dot-pass-manager.o \
	dot-pass-gen-types.o \
	dot-pass-generic.o \
	dot-pass-translate.o \
	dot-pass-check1.o \
	dot-pass-const_fold.o \
	dot-pass-dot-PrettyPrint.o \
	dot-pass-types-PrettyPrint.o \
	gpy-data-export.o \
	gpy-builtins.o

gpy1$(exeext): $(GPY_OBJS) attribs.o $(BACKEND) $(LIBDEPS)
	$(COMPILER) $(GPY_CFLAGS) $(ALL_CFLAGS) $(LDFLAGS) -o $@ \
	$(GPY_OBJS) attribs.o $(BACKEND) $(LIBS) $(BACKENDLIBS)

pyspec.o: $(srcdir)/python/pyspec.cc $(SYSTEM_H) coretypes.h $(TM_H) $(GCC_H) \
    $(CONFIG_H) opts.h
	(SHLIB='$(SHLIB)'; \
	$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(DRIVER_DEFINES) \
		$(INCLUDES) $(srcdir)/python/pyspec.cc)

GCCPY_D_OBJS = $(GCC_OBJS) pyspec.o
gccpy$(exeext): $(GCCPY_D_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a $(LIBDEPS)
	$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \
	  $(GCCPY_D_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a \
	  $(EXTRA_GCC_LIBS) $(LIBS)

python.srcextra: 
python.all.cross:

python.start.encap:
python.rest.encap:
python.man:
python.srcman:

python.mostlyclean:
	cd $(srcdir)/python; rm -f *.o y.tab.h y.tab.c lex.yy.c

python.clean: python.mostlyclean

python.tags: force
	cd $(srcdir)/python; etags -o TAGS.sub *.y *.l *.cc *.h; \
	etags --include TAGS.sub --include ../TAGS.sub

python.info: 
python.srcinfo: 
python.dvi: 
python.pdf: 
doc/python.info: 
doc/python.dvi: 
doc/python.pdf: 
python.html: 

python.install-common: installdirs
	-rm -f $(DESTDIR)$(bindir)/$(GCCPY_INSTALL_NAME)$(exeext)
	-rm -f $(DESTDIR)$(bindir)/$(GCCPY_TARGET_INSTALL_NAME)$(exeext)
	$(INSTALL_PROGRAM) gccpy$(exeext) $(DESTDIR)$(bindir)/$(GCCPY_INSTALL_NAME)$(exeext)
	if test -f $(DESTDIR)$(bindir)$(GCCPY_TARGET_INSTALL_NAME)$(exeext); then \
	  :; \
	else \
	  cd $(DESTDIR)$(bindir) && \
	   $(LN) $(GCCPY_INSTALL_NAME)$(exeext) $(GCCPY_TARGET_INSTALL_NAME)$(exeext); \
	fi

python.install-plugin:

python.uninstall:
	-rm -rf $(DESTDIR)/$(bindir)/$(GCCPY_INSTALL_NAME)$(exeext)

python.install-info: 
python.install-pdf: 
python.install-man:

# Stage hooks:
# The main makefile has already created stage?/python.

python.stage1: stage1-start
	-mv python/*$(objext) stage1/python
python.stage2: stage2-start
	-mv python/*$(objext) stage2/python
python.stage3: stage3-start
	-mv python/*$(objext) stage3/python
python.stage4: stage4-start
	-mv python/*$(objext) stage4/python
python.stageprofile: stageprofile-start
	-mv python/*$(objext) stageprofile/python
python.stagefeedback: stagefeedback-start
	-mv python/*$(objext) stagefeedback/python

config.status: python/config-lang.in
